// Generated by CoffeeScript 1.8.0
var timeout;

timeout = null;

document.addEventListener('DOMContentLoaded', function() {
  return chrome.runtime.sendMessage({
    type: 'get-local-user'
  }, function(data) {
    var logged_in, processMessages;
    logged_in = Boolean(data);
    if (logged_in) {
      $('body').html(teacup.render(function() {
        div('.header', function() {
          img('.image');
          span(function() {
            return "Logged in as ";
          });
          span('.name', function() {
            return '';
          });
          return span('.logout', function() {
            return 'logout';
          });
        });
        return div('.users', function() {
          return div(function() {
            return 'Loading...';
          });
        });
      }));
      $('body .header > .name').text(data.name);
      $('body .header > .image').attr('src', data.image);
      $('.logout').on('click', function(e) {
        return chrome.runtime.sendMessage({
          type: 'logout'
        }, function(data) {
          return location.reload();
        });
      });
      processMessages = function(users) {
        console.log(users, '123');
        clearTimeout(timeout);
        return timeout = setTimeout((function() {
          var key, profile, tabs, val, _results;
          _results = [];
          for (key in users) {
            val = users[key];
            profile = val.profile, tabs = val.tabs;
            _results.push($('.users').html(teacup.render(function() {
              return div('.user', {
                'data-user': key
              }, function() {
                div('.header', function() {
                  img('.image', {
                    src: profile.image
                  });
                  return span('.name', function() {
                    return profile.name;
                  });
                });
                return div('.tabs', function() {
                  var key_t, val_t, _results1;
                  _results1 = [];
                  for (key_t in tabs) {
                    val_t = tabs[key_t];
                    _results1.push(div('.tab', {
                      'data-highlighted': val_t.highlighted
                    }, function() {
                      img('.image', {
                        src: val_t.icon
                      });
                      div('.title', function() {
                        return val_t.title;
                      });
                      return div('.link', function() {
                        return val_t.url;
                      });
                    }));
                  }
                  return _results1;
                });
              });
            })));
          }
          return _results;
        }), 1000);
      };
      chrome.runtime.sendMessage({
        type: 'messages'
      }, function(messages) {
        return processMessages(messages);
      });
      return chrome.runtime.onMessage.addListener(function(messages, sender, sendResponse) {
        return processMessages(messages);
      });
    } else {
      $('body').html(teacup.render(function() {
        return div('.login', function() {
          return 'Click here to login and get started!';
        });
      }));
      return $('.login').on('click', function(e) {
        debugger;
        return window.open('https://jasongornall.github.io/browse-together/', '_blank');
      });
    }
  });
});
